1.打印名片案例
2.bom对象:浏览器对象
	window.document    DOM对象:所有标签对象
	window.frames        所有的框架 跟 window一个同一个    
	window.navigator    浏览器的配置信息
	window.screen        屏幕的尺寸信息
	
	****************************************************
	window.localtion   操作地址栏
	window.localtion.href  
	window.localtion.assign()   
	window.localtion.replace()  无痕浏览
	window.localtion.reload()   重新加载
	
	****************************************************
	window.history  操作历史记录
	window.history.back()   回退上一条历史
	window.history.forward()  前进
	window.history.go(数字)     -2 -1 0:当前    1 2 3    
		
	****************************************************
	window.open(页面,打开方式)   
	window.close()  关闭     
	
	****************************************************
	window.onload  事件   触发点:页面加载完成 自动触发绑定的函数
	
	
	var timer= setTimeOut()    单次定时器
	var timer=setInterval()     多次定时器
	参数1:函数名 匿名函数  
	参数2:毫秒值
	
	清空定时器
	clearTimeOut(定时器的名字)
	clearInterval(定时器的名字)
			
3.dom对象:document.get....
	获取元素节点：
		getElementById()
		
		获取的都是一个集合,不能直接使用 dom对象的方法和属性
		getElementsByClassName()   
		getElementsByName()   
	    getElementsByTagName()   
		
		
		
	获取属性节点：
		
			获取官方属性的
			对象.属性名=新的值
		
			获取自定义属性的
			值=对象.getAttribute("属性名")  
			
			修改或者增加
			对象.setAttribute("属性名","新值")  
			
	
	获取文本值 和修改
		对象.innerHTML =值    
		对象.innerText =值     
		
	获取/修改css属性:
		
		对象.style.属性名 = 值
		
		window.getComputedStyle(元素,null).属性
		
*******************************************************************************
1.案例:点击弹窗
	1.获取对象:按钮的  div的   span的  叉叉的
	2.给按钮绑定点击事件:
	3.按钮点击事件函数内部:
		1.)显示div
		2.)设置定时器:
			定时函数内部:===>变更数字====>关闭div====>关闭定时器===>数字还原
			
	4.给叉叉绑定点击事件:
		1.)关闭div
		2.)数字还原
		3.)关闭定时器
******************************************************************************
		
		
2.案例:帧动画实现

******************************************************************************
3.js补充:
1.关于事件的补充讲解:
	1)事件的4种绑定方式:
		<标签 onlick="函数名()">   函数的定义尽量写到下面来
		<标签 onlick='alert("弹窗")'>
		上述两种方式 都不建议使用:没有实现 代码结构的分离 不利于代码维护
		
		**********************************************************
		推荐方式:
		3.对象.onlick = 匿名函数 或者 函数名    注意点:不能重绑定同一个事件
		
		参数1:事件名  把on去掉
		参数2:匿名函数 或者 函数名 
		参数3:true false
		4.对象.addEventListener(,,)               注意点:能重绑定同一个事件
			一般填false
	*******************************************************************************
	2)event形参:
		事件函数的默认形参,指代当前的事件对象
	
	*******************************************************************************
	3)事件流:
	事件有两个阶段:
	1.捕获阶段:鼠标点击的时候  从最外面开始 捕获  一直到最里面
	2.执行阶段:
	都必须发生
	
	在捕获阶段 一边捕获一边执行  对象.addEventListener(,,true)     不建议这样写
	先捕获然后再执行:从里到外(冒泡)  对象.addEventListener(,,false) 
	
	我们需要根据需求 只执行一次事件 不想冒泡
	event.stopPropagation()
	
	*******************************************************************************
	4)鼠标的事件:
		鼠标进入:onmouseover()
		鼠标离开:onmouseout()
		

*******************************************************************************		

5.jq了解:
	
	
	2)入口函数:
	 $(document).ready(function(){
		   
		  
	   })
	   
	*******************************************************************************
	
	3)jq 对象和 js原生DOM对象
	DOM对象  ====> document.getElementById()
	Jq对象  ====>$("选择器")
	
	
	注意 
	JQ的对象 只能 操作 jq的 方法
	原生DOM对象 就只能 操作 js的方法


	扩展:
	jq 对象 可以转换成 原生DOM
	原生DOM 可以 转成 jq对象
    
	1.$(原生对象)			原生转jq
	2.$("选择器")[0]		jq转原生 	
	*******************************************************************************
	

6.jq的各种选择器:

	id选择器:$("#id名")

			
	类选择器:$(".类名")   
	
	
	标签选择器:$("标签名")
		

	复合 并集选择器:$("选择器,选择器")
			
	后代选择器:$("选择器 子级选择器")  所有的 指定后代
			
	父子选择器 >  只修改 儿子的:$("选择器>子级选择器")  只修改儿子的

		
	兄弟选择器 + ~
	1.$("选择器+选择器")   找到下一个兄弟
	2.$("选择器~选择器")   找到所有的指定兄弟
	
	*******************************************************************************
	伪类过滤器/简单过滤器
	jq选择器:first
			
	jq选择器:last 获取最后一个
	
	:eq(索引) 获取指定索引的
	
	jq选择器:even 获取偶数索引的

	jq选择器:odd 获取奇数索引的

	jq选择器:gt(索引) 大于啥索引的
	
	jq选择器:lt 小于啥索引的

	jq选择器:not(jq对象) 不是啥的
	
	*******************************************************************************
	内容过滤器:
	包含啥 
	:contains(字符串)
		
	 子节点为空的
	:empty() 
			
	包含指定标签的	
	:has(标签名)  
	
	*******************************************************************************

	显示的
	:visible   只对显示的对象进行操作
	
	隐藏的
	:hidden		只对隐藏的盒子进行操作
			
	*******************************************************************************
		


